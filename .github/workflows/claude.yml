name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # MCP Configuration for Terraform and Context7 documentation access
          mcp_config: |
            {
              "mcpServers": {
                "terraform": {
                  "command": "npx",
                  "args": [
                    "-y",
                    "@modelcontextprotocol/server-terraform@latest"
                  ]
                },
                "context7": {
                  "command": "npx",
                  "args": [
                    "-y",
                    "@upstash/context7-mcp@latest"
                  ]
                }
              }
            }

          # Allow Bash permissions for pre-commit hooks and documentation updates + MCP tools
          allowed_tools: "Bash(pre-commit run --files),Bash(terraform fmt),Bash(terraform validate),Bash(terraform-docs),mcp__terraform-server__getProviderDocs,mcp__terraform-server__resolveProviderDocID,mcp__terraform-server__searchModules,mcp__terraform-server__moduleDetails,mcp__context7__resolve-library-id,mcp__context7__get-library-docs"

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"

          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"

          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"

          # Subagent routing for specialized expertise
          custom_instructions: |
            You have access to specialized subagents for this Terraform AWS Cognito User Pool module. Use them for relevant questions:

            **Subagent Routing Rules:**
            - For Cognito User Pool configurations, resource setup, MFA, security features, authentication flows, identity providers: use @terraform-cognito
            - For testing questions, Terratest, test development, validation, CI/CD testing: use @terraform-testing
            - For security analysis, compliance, vulnerability assessment, hardening recommendations: use @terraform-security
            - For migrations, upgrades, version transitions, breaking changes: use @cognito-migration
            - For documentation, examples, README updates, user guides: use @module-documentation

            **Auto-routing Keywords:**
            - MFA, authentication, password policy, advanced security → @terraform-security
            - test, testing, terratest, validation, CI/CD → @terraform-testing
            - migration, upgrade, version, breaking change → @cognito-migration
            - user pool, client, domain, identity provider, schema → @terraform-cognito
            - documentation, example, README, guide → @module-documentation

            Always leverage the specialized knowledge in these subagents for better, more accurate responses.

          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test
