name: Claude Code Review

on:
  # Comment-based triggers (like Cursor's Bugbot)
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

jobs:
  # Add eyes reaction to show codebot is working
  eyes-reaction:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, 'codebot')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, 'codebot'))
    runs-on: ubuntu-latest
    timeout-minutes: 2
    permissions:
      contents: read
      pull-requests: write  # needed for reactions on PR comments
      issues: write  # needed for reactions on issue comments
    steps:
      - name: Add eyes reaction
        timeout-minutes: 1
        run: |
          set -euo pipefail

          # Add eyes emoji reaction to indicate codebot is processing
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
            COMMENT_ID="${{ github.event.comment.id }}"
          elif [ "${{ github.event_name }}" = "pull_request_review_comment" ]; then
            COMMENT_ID="${{ github.event.comment.id }}"
          else
            echo "No comment to react to for event type: ${{ github.event_name }}"
            exit 0
          fi

          echo "Adding ðŸ‘€ reaction to comment ID: $COMMENT_ID"
          gh api repos/${{ github.repository }}/issues/comments/$COMMENT_ID/reactions \
            --method POST \
            --field content='eyes' || {
            echo "Failed to add reaction - this might be expected for some comment types"
            exit 0
          }

          echo "âœ… Eyes reaction added successfully"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Claude Code Action (using proven claude.yml pattern)
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, 'codebot')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, 'codebot'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        # Pin to specific SHA for supply chain security
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        # Pin to specific version for supply chain security
        uses: anthropics/claude-code-action@v1.0.0
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Configure trigger phrase for codebot
          trigger_phrase: "codebot"

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # MCP Configuration for Terraform and Context7 documentation access
          # Dependencies pinned to specific versions for supply chain security
          mcp_config: |
            {
              "mcpServers": {
                "terraform": {
                  "command": "npx",
                  "args": [
                    "-y",
                    "@modelcontextprotocol/server-terraform@0.6.0"
                  ]
                },
                "context7": {
                  "command": "npx",
                  "args": [
                    "-y",
                    "@upstash/context7-mcp@1.0.0"
                  ]
                }
              }
            }
